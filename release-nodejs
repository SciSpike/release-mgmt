#!/usr/bin/env bash

# MIT License
#
# Copyright (c) 2018 SciSpike, LLC
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# This script implements usage(), getVersion() & setVersion() for Node.js projects using npm for package management.

usage_nodejs() {
    cat<<EOF
usage:
if on $MASTER branch: release nodejs $PRE_USAGE|$RC_USAGE
if on release branch: release nodejs major|minor|patch|$PRE_USAGE

optional supported environment variables:

variable                            description
--------                            -----------
ORIGIN                              name of git remote, default 'origin'
MASTER                              name of master branch, default 'master'
TAG_PREFIX                          prefix for tags, default ''
TAG_SUFFIX                          suffix for tags, default ''
BRANCH_PREFIX                       prefix for release branches, default 'v' ('' is common)
BRANCH_SUFFIX                       suffix for release branches, default '' ('.x' is common)
NO_GIT_DISCOVERY_ACROSS_FILESYSTEM  whether to not set GIT_DISCOVERY_ACROSS_FILESYSTEMS, default ''
PACKAGE_JSON                        name of version file, default 'package.json'
EOF
}

PACKAGE_JSON="${PACKAGE_JSON:-package.json}"
echo "INFO: using project file: $PACKAGE_JSON"

FX_nodejs=fx
if [ -n "$NO_USE_LOCAL_FX" ] || ! which $FX_nodejs; then
  FX_nodejs="docker run -v "$(pwd)"/$PACKAGE_JSON:/$PACKAGE_JSON scispike/fx:latest $PACKAGE_JSON"
fi

getVersion_nodejs() {
  cat "$PACKAGE_JSON" | $FX_nodejs this.version | sed 's/"//g'
}

# usage: setVersion version
setVersion_nodejs() {
  V=$1
  VERSION_FILE_CONTENT="$(cat $PACKAGE_JSON | $FX_nodejs "it => { it.version = \"$V\"; return it; }")"
  echo "$VERSION_FILE_CONTENT" | sed 's|\\|\\\\|g' > $PACKAGE_JSON
  echo "INFO: set 'version' attribute in $PACKAGE_JSON to $V"
  echo "$PACKAGE_JSON is now:"
  cat "$PACKAGE_JSON"
  echo "INFO: running npm install to update package-lock.json"
  ls
  if [ -f /.dockerenv ]; then
    NODE_MODULES_WORKDIR=/tmp/node-work
    mkdir -p $NODE_MODULES_WORKDIR
    PREFIX_ARG="--prefix $NODE_MODULES_WORKDIR"
  fi
  npm install $PREFIX_ARG
}
