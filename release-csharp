#!/usr/bin/env bash

# MIT License
#
# Copyright (c) 2019 SciSpike, LLC
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# This script implements usage(), getVersion() & setVersion() for .NET C# projects.

usage_csharp() {
    cat<<EOF
usage:
if on $MASTER branch: release nodejs $PRE_USAGE|$RC_USAGE
if on release branch: release nodejs major|minor|patch|$PRE_USAGE

optional supported environment variables:

variable                            description
--------                            -----------
ORIGIN                              name of git remote, default 'origin'
MASTER                              name of master branch, default 'master'
TAG_PREFIX                          prefix for tags, default ''
TAG_SUFFIX                          suffix for tags, default ''
BRANCH_PREFIX                       prefix for release branches, default 'v' ('' is common)
BRANCH_SUFFIX                       suffix for release branches, default '' ('.x' is common)
NO_GIT_DISCOVERY_ACROSS_FILESYSTEM  whether to not set GIT_DISCOVERY_ACROSS_FILESYSTEMS, default ''
ASSEMBLY_INFO_FILE                        name of version file, default 'AssemblyInfo.cs'
EOF
}

ASSEMBLY_INFO_FILE="${ASSEMBLY_INFO_FILE:-AssemblyInfo.cs}"
echo "INFO: using project file: $ASSEMBLY_INFO_FILE"

getVersion_csharp() {
  cat $ASSEMBLY_INFO_FILE | grep AssemblyInformationalVersion | $MATCH \".*\" | sed 's/"//g'
}

# usage: setVersion version
setVersion_csharp() {
  VER="$(echo "$1" | $MATCH '([0-9]{1,}\.[0-9]{1,}\.[0-9]{1,})' | awk '{print $2}')"
  FV="$VER.0"
  AV="$VER.*"

  FC="$(cat "$ASSEMBLY_INFO_FILE")"
  echo "$FC" \
  | sed "s/AssemblyFileVersion.*/AssemblyFileVersion\(\"$FV\"\)]/" \
  | sed "s/AssemblyVersion.*/AssemblyVersion\(\"$AV\"\)]/" \
  | sed "s/AssemblyInformationalVersion.*/AssemblyInformationalVersion\(\"$1\"\)]/" \
  > "$ASSEMBLY_INFO_FILE"

}
