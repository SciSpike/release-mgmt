#!/bin/sh

usage() {
    cat<<EOF
usage:
if on $MASTER branch: release $PRE_USAGE|$RC_USAGE
if on release branch: release major|minor|patch|$PRE_USAGE

optional supported environment variables:

variable                            description
--------                            -----------
ORIGIN                              name of git remote, default 'origin'
MASTER                              name of master branch, default 'master'
TAG_PREFIX                          prefix for tags, default ''
TAG_SUFFIX                          suffix for tags, default ''
BRANCH_PREFIX                       prefix for release branches, default 'v'
BRANCH_SUFFIX                       suffix for release branches, default '' ('.x' is common)
NO_GIT_DISCOVERY_ACROSS_FILESYSTEM  whether to not set GIT_DISCOVERY_ACROSS_FILESYSTEMS, default ''
POM                                 location of the POM file
EOF
}

getVersion() {
  echo $(egrep '^LABEL' "$VERSION_FILE" | egrep -o "$VERSION_LABEL=\"?[0-9]+\.[0-9]+\.[0-9]+(-[^ \"]*)?\"?" | cut -d'=' -f2 | sed 's/"//g')
}

# usage: setVersion version
setVersion() {
  V=$1

  first=true
  printf "$(cat "$VERSION_FILE")\n" | while read line; do
    label="$(echo "$line" | egrep '^LABEL' | egrep "$VERSION_LABEL=\"?[0-9]+\.[0-9]+\.[0-9]+(-[^ \"]*)?\"?")"
    if [ -z "$label" ]; then # skip it
      if [ $first = true ]; then
        first=false
        VERSION_FILE_CONTENT="$line"
      else
        VERSION_FILE_CONTENT="$VERSION_FILE_CONTENT\n$line"
      fi
    else # we found the LABEL line with the version=<semver> in it; replace & append to VERSION_FILE_CONTENT
      line="$(echo "$label" | sed -E "s/$VERSION_LABEL=\"?[0-9]+\.[0-9]+\.[0-9]+(-[^ \"]*)?\"?/$VERSION_LABEL=$1/")"
      VERSION_FILE_CONTENT="$VERSION_FILE_CONTENT\n$line"
    fi
    printf "$VERSION_FILE_CONTENT" > "$VERSION_FILE"
  done
  VERSION_FILE_CONTENT="$(cat "$VERSION_FILE")\n"
  printf "$VERSION_FILE_CONTENT" > "$VERSION_FILE"

  echo "INFO: set $VERSION_LABEL attribute in $VERSION_FILE to $V"
  echo "$VERSION_FILE is now:"
  cat "$VERSION_FILE"
}